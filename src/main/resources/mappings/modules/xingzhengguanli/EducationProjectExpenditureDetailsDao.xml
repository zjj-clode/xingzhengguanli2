<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudinte.modules.xingzhengguanli.dao.EducationProjectExpenditureDetailsDao">
    
	<sql id="educationProjectExpenditureDetailsColumns">
		a.id AS "id",
		a.expenditure_classification AS "expenditureClassification",
		a.government_classification AS "governmentClassification",
		a.sort AS "sort",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="educationProjectExpenditureDetailsJoins">
	</sql>
    
	<select id="get" resultType="EducationProjectExpenditureDetails">
		SELECT 
			<include refid="educationProjectExpenditureDetailsColumns"/>
		FROM education_project_expenditure_details a
		<include refid="educationProjectExpenditureDetailsJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<sql id="find_educationProjectExpenditureDetails_where">
		a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="expenditureClassification != null and expenditureClassification != ''">
			AND a.expenditure_classification LIKE 
				<if test="dbName == 'oracle'">'%'||#{expenditureClassification}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{expenditureClassification}+'%'</if>  
				<if test="dbName == 'mysql'">concat('%',#{expenditureClassification},'%')</if>
		</if>
		<if test="governmentClassification != null and governmentClassification != ''">
			AND a.government_classification LIKE 
				<if test="dbName == 'oracle'">'%'||#{governmentClassification}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{governmentClassification}+'%'</if>  
				<if test="dbName == 'mysql'">concat('%',#{governmentClassification},'%')</if>
		</if>
	</sql>
	
	<select id="findCount" resultType="long">
		SELECT COUNT(*)
		FROM education_project_expenditure_details a
		<include refid="educationProjectExpenditureDetailsJoins"/>
		<where>
			<include refid="find_educationProjectExpenditureDetails_where"/>
		</where>
	</select>
	
	<select id="findList" resultType="EducationProjectExpenditureDetails">
		SELECT 
			<include refid="educationProjectExpenditureDetailsColumns"/>
		FROM education_project_expenditure_details a
		<include refid="educationProjectExpenditureDetailsJoins"/>
		<where>
			<include refid="find_educationProjectExpenditureDetails_where"/>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.sort ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="EducationProjectExpenditureDetails">
		SELECT 
			<include refid="educationProjectExpenditureDetailsColumns"/>
		FROM education_project_expenditure_details a
		<include refid="educationProjectExpenditureDetailsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO education_project_expenditure_details(
			id,
			expenditure_classification,
			government_classification,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{expenditureClassification},
			#{governmentClassification},
			#{sort},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	
	  <insert id ="batchInsert" parameterType="java.util.List">
		INSERT INTO education_project_expenditure_details(
			id,
			expenditure_classification,
			government_classification,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) 
		   <foreach collection="list" item="item" index="index" separator =",">
       
		VALUES (
			#{item.id},
			#{item.expenditureClassification},
			#{item.governmentClassification},
			#{item.sort},
			#{item.createBy.id},
			#{item.createDate},
			#{item.updateBy.id},
			#{item.updateDate},
			#{item.remarks},
			#{item.delFlag}
		)
		</foreach>
	</insert>
	
	<insert id ="batchInsertUpdate" parameterType="java.util.List">
		INSERT INTO education_project_expenditure_details(
			id,
			expenditure_classification,
			government_classification,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		)
		VALUES 
		<foreach collection="list" item="item" index="index" separator =",">
        (
			#{item.id},
			#{item.expenditureClassification},
			#{item.governmentClassification},
			#{item.sort},
			#{item.createBy.id},
			#{item.createDate},
			#{item.updateBy.id},
			#{item.updateDate},
			#{item.remarks},
			#{item.delFlag}
		)
		</foreach>
		ON DUPLICATE KEY UPDATE
			expenditure_classification = values(expenditure_classification),
			government_classification = values(government_classification),
			sort = values(sort),
			update_by = values(update_by),
			update_date = values(update_date),
			remarks = values(remarks)
		
	</insert>
	
 <update id ="batchUpdate" parameterType="java.util.List" >
      <foreach collection="list" item="item" index="index" open="" close="" separator=";">
		UPDATE education_project_expenditure_details SET 	
			expenditure_classification = #{item.expenditureClassification},
			government_classification = #{item.governmentClassification},
			sort = #{item.sort},
			update_by = #{item.updateBy.id},
			update_date = #{item.updateDate},
			remarks = #{item.remarks}
		WHERE id = #{id}
		</foreach>
	</update>
	
	<update id="update">
		UPDATE education_project_expenditure_details SET 	
       			expenditure_classification = #{expenditureClassification},
			government_classification = #{governmentClassification},
			sort = #{sort},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<!-- 禁用 -->
	<update id="disable">
		UPDATE education_project_expenditure_details SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 删除 -->
	<delete id="delete">
		DELETE FROM education_project_expenditure_details WHERE id = #{id}
	</delete>
	
	<!-- 批量删除 ,参数为String类型id数组，如   String[] ids ，url: ids=1&ids=2&ids=3 或 ids=1,2,3 -->
	<delete id="deleteByIds1" parameterType="String">
		DELETE FROM education_project_expenditure_details WHERE id IN
		<foreach collection="array" item="item" open=" (" close=") " separator=",">
			#{item}
		</foreach>
	</delete>
	
	
	<delete id="deleteByIds" parameterType="EducationProjectExpenditureDetails">
		DELETE FROM education_project_expenditure_details WHERE id IN
		<foreach collection="ids" item="id" open=" (" close=") " separator=",">
			#{id}
		</foreach>
	</delete>
	
</mapper>